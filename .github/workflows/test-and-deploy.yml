name: Test and Deploy

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: corepack enable pnpm
      - uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions
          cache: pnpm
      - run: pnpm i
      - run: pnpm typecheck
      - run: pnpm lint
      - run: pnpm test -- --coverage
  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: corepack enable pnpm
      - uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions
          cache: pnpm
      - run: |
          ATPROTO_COMMIT=$(cat ./scripts/postinstall.sh | grep ATPROTO_COMMIT= | awk -F'=' '{print $2}')
          echo "ATPROTO_COMMIT=$ATPROTO_COMMIT" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          path: atproto
          key: atproto-${{ env.ATPROTO_COMMIT }}
      - run: pnpm i
      - run: pnpm playwright install --with-deps
      - run: cp .env.example .env
      - run: pnpm setup-dev
      - run: pnpm build
      - run: pnpm e2e
      - name: Upload Report
        if: always()
        run: |
          E2E_S3_PATH="playwright-report/${{ github.ref == 'refs/heads/main' && 'main' || github.sha }}"
          aws s3 cp playwright-report "s3://$E2E_S3_PATH" --recursive
          echo "Report: https://gha.linkat.blue/$E2E_S3_PATH/index.html"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ENDPOINT_URL: ${{ secrets.AWS_ENDPOINT_URL }}
          AWS_DEFAULT_REGION: auto
  deploy:
    runs-on: ubuntu-latest
    needs: [unit-test, e2e-test]
    if: github.ref == 'refs/heads/main'
    concurrency: deploy-group
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
